/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.view.cadastro;

import br.edu.utfpr.controller.CidadeCon;
import br.edu.utfpr.controller.ClienteCon;
import br.edu.utfpr.controller.EstadoCon;
import br.edu.utfpr.model.entity.Cidade;
import br.edu.utfpr.model.entity.Cliente;
import br.edu.utfpr.model.entity.Estado;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/**
 *
 * @author root
 */
public class FrmCadastroListas extends javax.swing.JInternalFrame {

    private JMenuItem itemEstado;
    private JMenuItem itemCidade;

    /**
     * Creates new form FrmCadastroListas
     */
    public FrmCadastroListas() {
        initComponents();
        carregarComboBox();
//        carregaPopupMenu();
        carregarList();
        carregarPopupMenu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuOpcao = new javax.swing.JPopupMenu();
        jLabelEstado = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox();
        jLabelApresentar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCidade = new javax.swing.JList();
        jLabelListaCidade = new javax.swing.JLabel();
        jButtonApresentar = new javax.swing.JButton();

        jPopupMenuOpcao.setEnabled(false);
        jPopupMenuOpcao.setLabel("menu");

        setClosable(true);
        setTitle("Cadastro Listas");

        jLabelEstado.setText("Estado");

        jScrollPane1.setViewportView(jListCidade);

        jLabelListaCidade.setText("Lista Cidades");
        jLabelListaCidade.setToolTipText("");

        jButtonApresentar.setText("Apresentar");
        jButtonApresentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApresentarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonApresentar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelApresentar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelListaCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstado)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelListaCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonApresentar)
                    .addComponent(jLabelApresentar))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonApresentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApresentarActionPerformed
        // TODO add your handling code here:
        onClickedApresentar();
    }//GEN-LAST:event_jButtonApresentarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApresentar;
    private javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JLabel jLabelApresentar;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelListaCidade;
    private javax.swing.JList jListCidade;
    private javax.swing.JPopupMenu jPopupMenuOpcao;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void carregarComboBox() {
        EstadoCon estadoCon = new EstadoCon();
        List<Estado> lista = estadoCon.getAll();

        for (Estado estado : lista) {
            jComboBoxEstado.addItem(estado);
        }
    }

    private void onClickedEstadoSelecionado() {
        Estado estado = null;

        estado = (Estado) jComboBoxEstado.getSelectedItem();

        jLabelApresentar.setText(estado.getNome());
    }

    private void carregarList() {
        CidadeCon cidadeCon = new CidadeCon();
        DefaultListModel<Cidade> listaModel = new DefaultListModel<Cidade>();

        for (Cidade cidade : cidadeCon.getAll()) {
            listaModel.addElement(cidade);
        }

        jListCidade.setModel(listaModel);
    }

    private void onClickedCidadeSelecionada() {
        Cidade cidade = (Cidade) jListCidade.getSelectedValue();
        jLabelApresentar.setText(cidade.getNome());
    }

    private void onClickedApresentar() {
        jButtonApresentar.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mousePressed(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // Monta os itens do PopupMenu e os eventos de clicked dos itens
                montarItemPopupMenu();
                
                // Exibe o PopupMenu passando os parâmetro onde deve ser apresentado e a posição X e Y onde vai estar sendo apresentar
                jPopupMenuOpcao.show(FrmCadastroListas.this.jButtonApresentar, e.getX(), e.getY());
            }

            @Override
            public void mouseEntered(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    private void carregarPopupMenu() {
        itemEstado = new JMenuItem("Estado");
        itemCidade = new JMenuItem("Cidade");
    }

    private void montarItemPopupMenu() {
        // Cria o item Estado e o evento do botão de clicked no menu
        itemEstado.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                onClickedEstadoSelecionado();
            }
        });
        
        // Adiciona o item Cidae no PopupMenu
        jPopupMenuOpcao.add(itemEstado);

        /**********************************************************/
        
        // Cria o item Cidade e o evento do botão de clicked no menu
        itemCidade.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                onClickedCidadeSelecionada();
            }
        });
        
        // Adiciona o item Cidae no PopupMenu
        jPopupMenuOpcao.add(itemCidade);
        
    }

}
